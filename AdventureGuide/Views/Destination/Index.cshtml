@model AdventureGuide.ViewModels.DestinationViewModel
@using AdventureGuide.Models.Destinations;

@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="currentFilter" value="@ViewData["currentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<div>

    @if (Model.Destinations.Any())
    {
        @foreach (Destination destination in Model.Destinations)
        {
            <partial name="_ListIndex" model="destination" />
        }
    }
</div>

@{
    var prevDisabled = !Model.PageViewModel.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.PageViewModel.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageViewModel.PageNumber - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageViewModel.PageNumber + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>