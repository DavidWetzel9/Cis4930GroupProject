@model AdventureGuide.ViewModels.DestinationViewModel
@using AdventureGuide.Models.Destinations;

@{
    ViewData["Title"] = "Index";
}

<script>
    // change search results list "title text" to be either "Results for [place]" or "All destinations"
    // depending on input (or lack thereof) given by user
    $(document).ready(function () {
        var searchString = "@ViewData["CurrentFilter"]";
        if (searchString != "" && searchString != null) {
            $("#resultsTitle").html("Results for \"" + searchString + "\"");
        } else {
            $("#resultsTitle").html("All Destinations");
        }
    });
</script>

<form asp-action="Index" method="get" class="d-flex justify-content-center row my-3">
    <div class="input-group">
        <input class="form-control border-right-0 border" placeholder="Search Destinations" name="currentFilter" value="@ViewData["CurrentFilter"]" />
        <span class="input-group-append">
            <button class="btn btn-outline-primary border-left-0 border" type="submit">
                <i class="fa fa-search"></i>
            </button>
        </span>
    </div>
</form>

<p>
    <h3 id="resultsTitle">Search results</h3>
</p>

<div>
    @if (Model.Destinations.Any())
    {
        @foreach (Destination destination in Model.Destinations)
        {
            <partial name="_ListIndex" model="destination" />
        }
    }
</div>

@{
    var prevDisabled = !Model.PageViewModel.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.PageViewModel.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageViewModel.PageNumber - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageViewModel.PageNumber + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>

<a asp-action="Index" method="get" class="btn btn-default">Show all destinations</a>